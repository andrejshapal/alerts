apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: critical-non-live-new
  namespace: monitoring
  labels:
    prometheus: main
spec:
  route:
    receiver: slack
    groupBy: ['alertname', 'cluster']
    groupWait: 30s
    groupInterval: 30s
    repeatInterval: 12h
    matchers:
      - name: severity
        value: "critical"
      - name: class
        value: "non-live"
      - name: app
        value: "new"
      - name: resolvable
        matchType: "!~"
        value: "false"
  receivers:
    - name: slack
      slackConfigs:
        - channel: "alerts-critical"
          username: "Alert Manager"
          iconEmoji: ":alert_bell_med:" 
          sendResolved: true
          title: |-
            [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} ({{ .CommonLabels.cluster }})
titleLink: "{{ .CommonAnnotations.link }}"
          pretext: "{{- if .CommonAnnotations.alert_owner_user -}} <@{{.CommonAnnotations.alert_owner_user}}> {{end}} {{- if .CommonAnnotations.alert_owner_team -}} <!subteam^{{.CommonAnnotations.alert_owner_team}}> {{end}}*{{ .CommonAnnotations.summary }}*"  
          text: |-
            {{ range .Alerts -}}
            >{{ .Annotations.description }}
            {{ end }}
footer: |-
            {{ range .CommonLabels.SortedPairs }}{{ if and (ne .Name "app") (ne .Name "namespace") (ne .Name "class") (ne .Name "alertname") (ne .Name "resolvable") (ne .Name "severity")}}
            â€¢ *{{ .Name }}:* `{{ .Value }}`{{ end }}{{ end }}
apiURL:
            name: slack-webhook
            key: url
  inhibitRules:
    - targetMatch:
        - name: alertname
          matchType: "!="
          value: "All tables closed"
    - sourceMatch:
        - name: alertname
          value: "All tables closed"
    - equal: ['original_namespace']

